---
version: "3.9"
# leaving the db config in for now, as useful examples for deploying a postgis db
x-var:
  - &POSTGRES_USER
    postgres
  - &POSTGRES_PASSWORD
    default
  - &POSTGRES_DATABASE
    postgres

x-postgres-vars: &postgres-vars
  POSTGRES_HOST: database
  POSTGRES_USER: *POSTGRES_USER
  POSTGRES_PASSWORD: *POSTGRES_PASSWORD
  POSTGRES_DATABASE: *POSTGRES_DATABASE

services:
  # database:
  #   image: postgres:15
  #   container_name: database
  #   environment:
  #     <<: *postgres-vars
  #   healthcheck:
  #     test: ["CMD", "pg_isready", "-U", *POSTGRES_USER]
  #   ports: ["5432:5432"]


  frontend:
    container_name: frontend
    entrypoint: sh -c "npm ci && npm run dev"
    environment:
      NODE_ENV: development
      PORT: 3000
      BACKEND_URL: http://backend:3000
    image: node:20-bullseye
    ports: ["3000:3000"]
    volumes: ["./frontend:/app", "/app/node_modules"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
    working_dir: "/app"
    # depends_on:
    #   backend:
    #     condition: service_healthy

  caddy:
    container_name: caddy
    profiles: ["caddy"]
    build: ./frontend
    environment:
      NODE_ENV: development
      PORT: 3000
      BACKEND_URL: http://backend:3000
      LOG_LEVEL: info
    ports: ["3005:3000"]
    volumes: ["./frontend/Caddyfile:/etc/caddy/Caddyfile"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
    # depends_on:
    #   backend:
    #     condition: service_healthy
